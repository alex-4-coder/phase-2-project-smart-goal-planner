{"ast":null,"code":"var _jsxFileName = \"/home/alex/phase-2-project-smart-goal-planner/src/components/GoalDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AddGoalForm from \"./AddGoalForm\";\nimport DepositForm from \"./DepositForm\";\nimport GoalCard from \"./GoalCard\";\nimport OverviewPanel from \"./OverviewPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:3000/goals\";\nfunction GoalDashboard() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  useEffect(() => {\n    fetch(API).then(r => r.json()).then(setGoals);\n  }, []);\n  const addGoal = newGoal => {\n    fetch(API, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newGoal)\n    }).then(r => r.json()).then(data => setGoals([...goals, data]));\n  };\n  const makeDeposit = (goalId, amount) => {\n    const goalToUpdate = goals.find(g => g.id === goalId);\n    const updatedAmount = goalToUpdate.savedAmount + amount;\n    fetch(`${API}/${goalId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        savedAmount: updatedAmount\n      })\n    }).then(r => r.json()).then(updatedGoal => {\n      const updatedGoals = goals.map(g => g.id === goalId ? updatedGoal : g);\n      setGoals(updatedGoals);\n    });\n  };\n  const deleteGoal = goalId => {\n    fetch(`${API}/${goalId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setGoals(goals.filter(g => g.id !== goalId));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(OverviewPanel, {\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddGoalForm, {\n      onAddGoal: addGoal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DepositForm, {\n      goals: goals,\n      onDeposit: makeDeposit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCard, {\n      goal: goal,\n      onDelete: deleteGoal\n    }, goal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(GoalDashboard, \"unVZk6oTfEFOQZ6NvI8KtfburI8=\");\n_c = GoalDashboard;\nexport default GoalDashboard;\nvar _c;\n$RefreshReg$(_c, \"GoalDashboard\");","map":{"version":3,"names":["React","useEffect","useState","AddGoalForm","DepositForm","GoalCard","OverviewPanel","jsxDEV","_jsxDEV","API","GoalDashboard","_s","goals","setGoals","fetch","then","r","json","addGoal","newGoal","method","headers","body","JSON","stringify","data","makeDeposit","goalId","amount","goalToUpdate","find","g","id","updatedAmount","savedAmount","updatedGoal","updatedGoals","map","deleteGoal","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddGoal","onDeposit","goal","onDelete","_c","$RefreshReg$"],"sources":["/home/alex/phase-2-project-smart-goal-planner/src/components/GoalDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AddGoalForm from \"./AddGoalForm\";\nimport DepositForm from \"./DepositForm\";\nimport GoalCard from \"./GoalCard\";\nimport OverviewPanel from \"./OverviewPanel\";\n\nconst API = \"http://localhost:3000/goals\";\n\nfunction GoalDashboard() {\n  const [goals, setGoals] = useState([]);\n\n  useEffect(() => {\n    fetch(API)\n      .then((r) => r.json())\n      .then(setGoals);\n  }, []);\n\n  const addGoal = (newGoal) => {\n    fetch(API, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newGoal),\n    })\n      .then((r) => r.json())\n      .then((data) => setGoals([...goals, data]));\n  };\n\n  const makeDeposit = (goalId, amount) => {\n    const goalToUpdate = goals.find((g) => g.id === goalId);\n    const updatedAmount = goalToUpdate.savedAmount + amount;\n\n    fetch(`${API}/${goalId}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ savedAmount: updatedAmount }),\n    })\n      .then((r) => r.json())\n      .then((updatedGoal) => {\n        const updatedGoals = goals.map((g) => (g.id === goalId ? updatedGoal : g));\n        setGoals(updatedGoals);\n      });\n  };\n\n  const deleteGoal = (goalId) => {\n    fetch(`${API}/${goalId}`, { method: \"DELETE\" }).then(() => {\n      setGoals(goals.filter((g) => g.id !== goalId));\n    });\n  };\n\n  return (\n    <div>\n      <OverviewPanel goals={goals} />\n      <AddGoalForm onAddGoal={addGoal} />\n      <DepositForm goals={goals} onDeposit={makeDeposit} />\n      {goals.map((goal) => (\n        <GoalCard key={goal.id} goal={goal} onDelete={deleteGoal} />\n      ))}\n    </div>\n  );\n}\n\nexport default GoalDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}